
// Autogenerated by GLExtractor 0.5.99c (gl3 mode) (C) Sergey Kosarevsky
// Part of Linderdaum Engine
// http://www.linderdaum.com

#ifndef _LGL_API_
#define _LGL_API_

#include "LGL.h"

#ifndef LGL_CALL
#  if defined( ANDROID )
#     define LGL_CALL __NDK_FPABI__
#  else
#     define LGL_CALL
#  endif // OS_ANDROID
#endif // LGL_CALL

#if defined( ANDROID )
typedef double GLclampd;
typedef double GLdouble;
typedef int64_t GLint64;
typedef uint64_t GLuint64;
typedef ptrdiff_t GLintptrARB;
typedef void ( *PFNGLCULLFACEPROC ) ( GLenum mode ) LGL_CALL;
typedef void ( *PFNGLFRONTFACEPROC ) ( GLenum mode ) LGL_CALL;
typedef void ( *PFNGLHINTPROC ) ( GLenum target, GLenum mode ) LGL_CALL;
typedef void ( *PFNGLLINEWIDTHPROC ) ( GLfloat width ) LGL_CALL;
typedef void ( *PFNGLPOINTSIZEPROC ) ( GLfloat size ) LGL_CALL;
typedef void ( *PFNGLPOLYGONMODEPROC ) ( GLenum face, GLenum mode ) LGL_CALL;
typedef void ( *PFNGLSCISSORPROC ) ( GLint x, GLint y, GLsizei width, GLsizei height ) LGL_CALL;
typedef void ( *PFNGLTEXPARAMETERFPROC ) ( GLenum target, GLenum pname, GLfloat param ) LGL_CALL;
typedef void ( *PFNGLTEXPARAMETERFVPROC ) ( GLenum target, GLenum pname, const GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLTEXPARAMETERIPROC ) ( GLenum target, GLenum pname, GLint param ) LGL_CALL;
typedef void ( *PFNGLTEXPARAMETERIVPROC ) ( GLenum target, GLenum pname, const GLint* params ) LGL_CALL;
typedef void ( *PFNGLTEXIMAGE2DPROC ) ( GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels ) LGL_CALL;
typedef void ( *PFNGLDRAWBUFFERPROC ) ( GLenum mode ) LGL_CALL;
typedef void ( *PFNGLCLEARPROC ) ( GLbitfield mask ) LGL_CALL;
typedef void ( *PFNGLCLEARCOLORPROC ) ( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha ) LGL_CALL;
typedef void ( *PFNGLCLEARSTENCILPROC ) ( GLint s ) LGL_CALL;
typedef void ( *PFNGLCLEARDEPTHPROC ) ( GLclampd depth ) LGL_CALL;
typedef void ( *PFNGLSTENCILMASKPROC ) ( GLuint mask ) LGL_CALL;
typedef void ( *PFNGLCOLORMASKPROC ) ( GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha ) LGL_CALL;
typedef void ( *PFNGLDEPTHMASKPROC ) ( GLboolean flag ) LGL_CALL;
typedef void ( *PFNGLDISABLEPROC ) ( GLenum cap ) LGL_CALL;
typedef void ( *PFNGLENABLEPROC ) ( GLenum cap ) LGL_CALL;
typedef void ( *PFNGLFINISHPROC ) ( void ) LGL_CALL;
typedef void ( *PFNGLFLUSHPROC ) ( void ) LGL_CALL;
typedef void ( *PFNGLBLENDFUNCPROC ) ( GLenum sfactor, GLenum dfactor ) LGL_CALL;
typedef void ( *PFNGLLOGICOPPROC ) ( GLenum opcode ) LGL_CALL;
typedef void ( *PFNGLSTENCILFUNCPROC ) ( GLenum func, GLint ref, GLuint mask ) LGL_CALL;
typedef void ( *PFNGLSTENCILOPPROC ) ( GLenum fail, GLenum zfail, GLenum zpass ) LGL_CALL;
typedef void ( *PFNGLDEPTHFUNCPROC ) ( GLenum func ) LGL_CALL;
typedef void ( *PFNGLPIXELSTOREFPROC ) ( GLenum pname, GLfloat param ) LGL_CALL;
typedef void ( *PFNGLPIXELSTOREIPROC ) ( GLenum pname, GLint param ) LGL_CALL;
typedef void ( *PFNGLREADPIXELSPROC ) ( GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels ) LGL_CALL;
typedef void ( *PFNGLGETBOOLEANVPROC ) ( GLenum pname, GLboolean* params ) LGL_CALL;
typedef void ( *PFNGLGETDOUBLEVPROC ) ( GLenum pname, GLdouble* params ) LGL_CALL;
typedef GLenum ( *PFNGLGETERRORPROC ) ( void ) LGL_CALL;
typedef void ( *PFNGLGETFLOATVPROC ) ( GLenum pname, GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLGETINTEGERVPROC ) ( GLenum pname, GLint* params ) LGL_CALL;
typedef const GLubyte* ( *PFNGLGETSTRINGPROC ) ( GLenum name ) LGL_CALL;
typedef void ( *PFNGLGETTEXIMAGEPROC ) ( GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels ) LGL_CALL;
typedef void ( *PFNGLGETTEXPARAMETERFVPROC ) ( GLenum target, GLenum pname, GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLGETTEXPARAMETERIVPROC ) ( GLenum target, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETTEXLEVELPARAMETERFVPROC ) ( GLenum target, GLint level, GLenum pname, GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLGETTEXLEVELPARAMETERIVPROC ) ( GLenum target, GLint level, GLenum pname, GLint* params ) LGL_CALL;
typedef GLboolean ( *PFNGLISENABLEDPROC ) ( GLenum cap ) LGL_CALL;
typedef void ( *PFNGLDEPTHRANGEPROC ) ( GLclampd near, GLclampd far ) LGL_CALL;
typedef void ( *PFNGLVIEWPORTPROC ) ( GLint x, GLint y, GLsizei width, GLsizei height ) LGL_CALL;
typedef void ( *PFNGLDRAWARRAYSPROC ) ( GLenum mode, GLint first, GLsizei count ) LGL_CALL;
typedef void ( *PFNGLDRAWELEMENTSPROC ) ( GLenum mode, GLsizei count, GLenum type, const GLvoid* indices ) LGL_CALL;
typedef void ( *PFNGLGETPOINTERVPROC ) ( GLenum pname, GLvoid** params ) LGL_CALL;
typedef void ( *PFNGLPOLYGONOFFSETPROC ) ( GLfloat factor, GLfloat units ) LGL_CALL;
typedef void ( *PFNGLCOPYTEXIMAGE2DPROC ) ( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border ) LGL_CALL;
typedef void ( *PFNGLCOPYTEXSUBIMAGE2DPROC ) ( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height ) LGL_CALL;
typedef void ( *PFNGLTEXSUBIMAGE2DPROC ) ( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels ) LGL_CALL;
typedef void ( *PFNGLBINDTEXTUREPROC ) ( GLenum target, GLuint texture ) LGL_CALL;
typedef void ( *PFNGLDELETETEXTURESPROC ) ( GLsizei n, const GLuint* textures ) LGL_CALL;
typedef void ( *PFNGLGENTEXTURESPROC ) ( GLsizei n, GLuint* textures ) LGL_CALL;
typedef GLboolean ( *PFNGLISTEXTUREPROC ) ( GLuint texture ) LGL_CALL;
typedef void ( *PFNGLBLENDCOLORPROC ) ( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha ) LGL_CALL;
typedef void ( *PFNGLBLENDEQUATIONPROC ) ( GLenum mode ) LGL_CALL;
typedef void ( *PFNGLDRAWRANGEELEMENTSPROC ) ( GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid* indices ) LGL_CALL;
typedef void ( *PFNGLACTIVETEXTUREPROC ) ( GLenum texture ) LGL_CALL;
typedef void ( *PFNGLSAMPLECOVERAGEPROC ) ( GLclampf value, GLboolean invert ) LGL_CALL;
typedef void ( *PFNGLBLENDFUNCSEPARATEPROC ) ( GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha ) LGL_CALL;
typedef void ( *PFNGLMULTIDRAWARRAYSPROC ) ( GLenum mode, const GLint* first, const GLsizei* count, GLsizei primcount ) LGL_CALL;
typedef void ( *PFNGLMULTIDRAWELEMENTSPROC ) ( GLenum mode, const GLsizei* count, GLenum type, const GLvoid** indices, GLsizei primcount ) LGL_CALL;
typedef void ( *PFNGLPOINTPARAMETERFPROC ) ( GLenum pname, GLfloat param ) LGL_CALL;
typedef void ( *PFNGLPOINTPARAMETERFVPROC ) ( GLenum pname, const GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLPOINTPARAMETERIPROC ) ( GLenum pname, GLint param ) LGL_CALL;
typedef void ( *PFNGLPOINTPARAMETERIVPROC ) ( GLenum pname, const GLint* params ) LGL_CALL;
typedef void ( *PFNGLGENQUERIESPROC ) ( GLsizei n, GLuint* ids ) LGL_CALL;
typedef void ( *PFNGLDELETEQUERIESPROC ) ( GLsizei n, const GLuint* ids ) LGL_CALL;
typedef void ( *PFNGLGETQUERYIVPROC ) ( GLenum target, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETQUERYOBJECTIVPROC ) ( GLuint id, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETQUERYOBJECTUIVPROC ) ( GLuint id, GLenum pname, GLuint* params ) LGL_CALL;
typedef void ( *PFNGLBINDBUFFERPROC ) ( GLenum target, GLuint buffer ) LGL_CALL;
typedef void ( *PFNGLDELETEBUFFERSPROC ) ( GLsizei n, const GLuint* buffers ) LGL_CALL;
typedef void ( *PFNGLGENBUFFERSPROC ) ( GLsizei n, GLuint* buffers ) LGL_CALL;
typedef GLboolean ( *PFNGLISBUFFERPROC ) ( GLuint buffer ) LGL_CALL;
typedef void ( *PFNGLBUFFERDATAPROC ) ( GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage ) LGL_CALL;
typedef void ( *PFNGLBUFFERSUBDATAPROC ) ( GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data ) LGL_CALL;
typedef void ( *PFNGLGETBUFFERSUBDATAPROC ) ( GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data ) LGL_CALL;
typedef GLvoid* ( *PFNGLMAPBUFFERPROC ) ( GLenum target, GLenum access ) LGL_CALL;
typedef GLboolean ( *PFNGLUNMAPBUFFERPROC ) ( GLenum target ) LGL_CALL;
typedef void ( *PFNGLGETBUFFERPARAMETERIVPROC ) ( GLenum target, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETBUFFERPOINTERVPROC ) ( GLenum target, GLenum pname, GLvoid** params ) LGL_CALL;
typedef void ( *PFNGLBLENDEQUATIONSEPARATEPROC ) ( GLenum modeRGB, GLenum modeAlpha ) LGL_CALL;
typedef void ( *PFNGLSTENCILOPSEPARATEPROC ) ( GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass ) LGL_CALL;
typedef void ( *PFNGLSTENCILFUNCSEPARATEPROC ) ( GLenum face, GLenum func, GLint ref, GLuint mask ) LGL_CALL;
typedef void ( *PFNGLSTENCILMASKSEPARATEPROC ) ( GLenum face, GLuint mask ) LGL_CALL;
typedef void ( *PFNGLATTACHSHADERPROC ) ( GLuint program, GLuint shader ) LGL_CALL;
typedef void ( *PFNGLBINDATTRIBLOCATIONPROC ) ( GLuint program, GLuint index, const GLchar* name ) LGL_CALL;
typedef void ( *PFNGLCOMPILESHADERPROC ) ( GLuint shader ) LGL_CALL;
typedef GLuint ( *PFNGLCREATEPROGRAMPROC ) ( void ) LGL_CALL;
typedef GLuint ( *PFNGLCREATESHADERPROC ) ( GLenum type ) LGL_CALL;
typedef void ( *PFNGLDELETEPROGRAMPROC ) ( GLuint program ) LGL_CALL;
typedef void ( *PFNGLDELETESHADERPROC ) ( GLuint shader ) LGL_CALL;
typedef void ( *PFNGLDETACHSHADERPROC ) ( GLuint program, GLuint shader ) LGL_CALL;
typedef void ( *PFNGLDISABLEVERTEXATTRIBARRAYPROC ) ( GLuint index ) LGL_CALL;
typedef void ( *PFNGLENABLEVERTEXATTRIBARRAYPROC ) ( GLuint index ) LGL_CALL;
typedef void ( *PFNGLGETACTIVEATTRIBPROC ) ( GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name ) LGL_CALL;
typedef void ( *PFNGLGETACTIVEUNIFORMPROC ) ( GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name ) LGL_CALL;
typedef void ( *PFNGLGETATTACHEDSHADERSPROC ) ( GLuint program, GLsizei maxCount, GLsizei* count, GLuint* obj ) LGL_CALL;
typedef GLint ( *PFNGLGETATTRIBLOCATIONPROC ) ( GLuint program, const GLchar* name ) LGL_CALL;
typedef void ( *PFNGLGETPROGRAMIVPROC ) ( GLuint program, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETPROGRAMINFOLOGPROC ) ( GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog ) LGL_CALL;
typedef void ( *PFNGLGETSHADERIVPROC ) ( GLuint shader, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETSHADERINFOLOGPROC ) ( GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog ) LGL_CALL;
typedef void ( *PFNGLGETSHADERSOURCEPROC ) ( GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source ) LGL_CALL;
typedef GLint ( *PFNGLGETUNIFORMLOCATIONPROC ) ( GLuint program, const GLchar* name ) LGL_CALL;
typedef void ( *PFNGLGETUNIFORMFVPROC ) ( GLuint program, GLint location, GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLGETUNIFORMIVPROC ) ( GLuint program, GLint location, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETVERTEXATTRIBDVPROC ) ( GLuint index, GLenum pname, GLdouble* params ) LGL_CALL;
typedef void ( *PFNGLGETVERTEXATTRIBFVPROC ) ( GLuint index, GLenum pname, GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLGETVERTEXATTRIBIVPROC ) ( GLuint index, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETVERTEXATTRIBPOINTERVPROC ) ( GLuint index, GLenum pname, GLvoid** pointer ) LGL_CALL;
typedef GLboolean ( *PFNGLISPROGRAMPROC ) ( GLuint program ) LGL_CALL;
typedef GLboolean ( *PFNGLISSHADERPROC ) ( GLuint shader ) LGL_CALL;
typedef void ( *PFNGLLINKPROGRAMPROC ) ( GLuint program ) LGL_CALL;
typedef void ( *PFNGLSHADERSOURCEPROC ) ( GLuint shader, GLsizei count, const GLchar** string, const GLint* length ) LGL_CALL;
typedef void ( *PFNGLUSEPROGRAMPROC ) ( GLuint program ) LGL_CALL;
typedef void ( *PFNGLUNIFORM1FPROC ) ( GLint location, GLfloat v0 ) LGL_CALL;
typedef void ( *PFNGLUNIFORM2FPROC ) ( GLint location, GLfloat v0, GLfloat v1 ) LGL_CALL;
typedef void ( *PFNGLUNIFORM3FPROC ) ( GLint location, GLfloat v0, GLfloat v1, GLfloat v2 ) LGL_CALL;
typedef void ( *PFNGLUNIFORM4FPROC ) ( GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3 ) LGL_CALL;
typedef void ( *PFNGLUNIFORM1IPROC ) ( GLint location, GLint v0 ) LGL_CALL;
typedef void ( *PFNGLUNIFORM2IPROC ) ( GLint location, GLint v0, GLint v1 ) LGL_CALL;
typedef void ( *PFNGLUNIFORM3IPROC ) ( GLint location, GLint v0, GLint v1, GLint v2 ) LGL_CALL;
typedef void ( *PFNGLUNIFORM4IPROC ) ( GLint location, GLint v0, GLint v1, GLint v2, GLint v3 ) LGL_CALL;
typedef void ( *PFNGLUNIFORM1FVPROC ) ( GLint location, GLsizei count, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORM2FVPROC ) ( GLint location, GLsizei count, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORM3FVPROC ) ( GLint location, GLsizei count, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORM4FVPROC ) ( GLint location, GLsizei count, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORM1IVPROC ) ( GLint location, GLsizei count, const GLint* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORM2IVPROC ) ( GLint location, GLsizei count, const GLint* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORM3IVPROC ) ( GLint location, GLsizei count, const GLint* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORM4IVPROC ) ( GLint location, GLsizei count, const GLint* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORMMATRIX2FVPROC ) ( GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORMMATRIX3FVPROC ) ( GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORMMATRIX4FVPROC ) ( GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLVALIDATEPROGRAMPROC ) ( GLuint program ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB1DPROC ) ( GLuint index, GLdouble x ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB1DVPROC ) ( GLuint index, const GLdouble* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB1FPROC ) ( GLuint index, GLfloat x ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB1FVPROC ) ( GLuint index, const GLfloat* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB1SPROC ) ( GLuint index, GLshort x ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB1SVPROC ) ( GLuint index, const GLshort* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB2DPROC ) ( GLuint index, GLdouble x, GLdouble y ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB2DVPROC ) ( GLuint index, const GLdouble* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB2FPROC ) ( GLuint index, GLfloat x, GLfloat y ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB2FVPROC ) ( GLuint index, const GLfloat* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB2SPROC ) ( GLuint index, GLshort x, GLshort y ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB2SVPROC ) ( GLuint index, const GLshort* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB3DPROC ) ( GLuint index, GLdouble x, GLdouble y, GLdouble z ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB3DVPROC ) ( GLuint index, const GLdouble* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB3FPROC ) ( GLuint index, GLfloat x, GLfloat y, GLfloat z ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB3FVPROC ) ( GLuint index, const GLfloat* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB3SPROC ) ( GLuint index, GLshort x, GLshort y, GLshort z ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB3SVPROC ) ( GLuint index, const GLshort* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4NBVPROC ) ( GLuint index, const GLbyte* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4NIVPROC ) ( GLuint index, const GLint* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4NSVPROC ) ( GLuint index, const GLshort* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4NUBPROC ) ( GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4NUBVPROC ) ( GLuint index, const GLubyte* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4NUIVPROC ) ( GLuint index, const GLuint* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4NUSVPROC ) ( GLuint index, const GLushort* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4BVPROC ) ( GLuint index, const GLbyte* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4DPROC ) ( GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4DVPROC ) ( GLuint index, const GLdouble* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4FPROC ) ( GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4FVPROC ) ( GLuint index, const GLfloat* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4IVPROC ) ( GLuint index, const GLint* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4SPROC ) ( GLuint index, GLshort x, GLshort y, GLshort z, GLshort w ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4SVPROC ) ( GLuint index, const GLshort* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4UBVPROC ) ( GLuint index, const GLubyte* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4UIVPROC ) ( GLuint index, const GLuint* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIB4USVPROC ) ( GLuint index, const GLushort* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBPOINTERPROC ) ( GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* pointer ) LGL_CALL;
typedef void ( *PFNGLUNIFORMMATRIX2X3FVPROC ) ( GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORMMATRIX3X2FVPROC ) ( GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORMMATRIX2X4FVPROC ) ( GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORMMATRIX4X2FVPROC ) ( GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORMMATRIX3X4FVPROC ) ( GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORMMATRIX4X3FVPROC ) ( GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLCOLORMASKIPROC ) ( GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a ) LGL_CALL;
typedef void ( *PFNGLGETBOOLEANI_VPROC ) ( GLenum target, GLuint index, GLboolean* data ) LGL_CALL;
typedef void ( *PFNGLGETINTEGERI_VPROC ) ( GLenum target, GLuint index, GLint* data ) LGL_CALL;
typedef void ( *PFNGLENABLEIPROC ) ( GLenum target, GLuint index ) LGL_CALL;
typedef void ( *PFNGLDISABLEIPROC ) ( GLenum target, GLuint index ) LGL_CALL;
typedef GLboolean ( *PFNGLISENABLEDIPROC ) ( GLenum target, GLuint index ) LGL_CALL;
typedef void ( *PFNGLBEGINTRANSFORMFEEDBACKPROC ) ( GLenum primitiveMode ) LGL_CALL;
typedef void ( *PFNGLENDTRANSFORMFEEDBACKPROC ) ( void ) LGL_CALL;
typedef void ( *PFNGLBINDBUFFERRANGEPROC ) ( GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size ) LGL_CALL;
typedef void ( *PFNGLTRANSFORMFEEDBACKVARYINGSPROC ) ( GLuint program, GLsizei count, const GLchar** varyings, GLenum bufferMode ) LGL_CALL;
typedef void ( *PFNGLGETTRANSFORMFEEDBACKVARYINGPROC ) ( GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, GLchar* name ) LGL_CALL;
typedef void ( *PFNGLCLAMPCOLORPROC ) ( GLenum target, GLenum clamp ) LGL_CALL;
typedef void ( *PFNGLBEGINCONDITIONALRENDERPROC ) ( GLuint id, GLenum mode ) LGL_CALL;
typedef void ( *PFNGLENDCONDITIONALRENDERPROC ) ( void ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBIPOINTERPROC ) ( GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid* pointer ) LGL_CALL;
typedef void ( *PFNGLGETVERTEXATTRIBIIVPROC ) ( GLuint index, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETVERTEXATTRIBIUIVPROC ) ( GLuint index, GLenum pname, GLuint* params ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI1IPROC ) ( GLuint index, GLint x ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI2IPROC ) ( GLuint index, GLint x, GLint y ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI3IPROC ) ( GLuint index, GLint x, GLint y, GLint z ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI4IPROC ) ( GLuint index, GLint x, GLint y, GLint z, GLint w ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI1UIPROC ) ( GLuint index, GLuint x ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI2UIPROC ) ( GLuint index, GLuint x, GLuint y ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI3UIPROC ) ( GLuint index, GLuint x, GLuint y, GLuint z ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI4UIPROC ) ( GLuint index, GLuint x, GLuint y, GLuint z, GLuint w ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI1IVPROC ) ( GLuint index, const GLint* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI2IVPROC ) ( GLuint index, const GLint* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI3IVPROC ) ( GLuint index, const GLint* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI4IVPROC ) ( GLuint index, const GLint* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI1UIVPROC ) ( GLuint index, const GLuint* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI2UIVPROC ) ( GLuint index, const GLuint* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI3UIVPROC ) ( GLuint index, const GLuint* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI4UIVPROC ) ( GLuint index, const GLuint* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI4BVPROC ) ( GLuint index, const GLbyte* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI4SVPROC ) ( GLuint index, const GLshort* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI4UBVPROC ) ( GLuint index, const GLubyte* v ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBI4USVPROC ) ( GLuint index, const GLushort* v ) LGL_CALL;
typedef void ( *PFNGLGETUNIFORMUIVPROC ) ( GLuint program, GLint location, GLuint* params ) LGL_CALL;
typedef void ( *PFNGLBINDFRAGDATALOCATIONPROC ) ( GLuint program, GLuint color, const GLchar* name ) LGL_CALL;
typedef GLint ( *PFNGLGETFRAGDATALOCATIONPROC ) ( GLuint program, const GLchar* name ) LGL_CALL;
typedef void ( *PFNGLUNIFORM1UIPROC ) ( GLint location, GLuint v0 ) LGL_CALL;
typedef void ( *PFNGLUNIFORM2UIPROC ) ( GLint location, GLuint v0, GLuint v1 ) LGL_CALL;
typedef void ( *PFNGLUNIFORM3UIPROC ) ( GLint location, GLuint v0, GLuint v1, GLuint v2 ) LGL_CALL;
typedef void ( *PFNGLUNIFORM4UIPROC ) ( GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3 ) LGL_CALL;
typedef void ( *PFNGLUNIFORM1UIVPROC ) ( GLint location, GLsizei count, const GLuint* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORM2UIVPROC ) ( GLint location, GLsizei count, const GLuint* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORM3UIVPROC ) ( GLint location, GLsizei count, const GLuint* value ) LGL_CALL;
typedef void ( *PFNGLUNIFORM4UIVPROC ) ( GLint location, GLsizei count, const GLuint* value ) LGL_CALL;
typedef void ( *PFNGLTEXPARAMETERIIVPROC ) ( GLenum target, GLenum pname, const GLint* params ) LGL_CALL;
typedef void ( *PFNGLTEXPARAMETERIUIVPROC ) ( GLenum target, GLenum pname, const GLuint* params ) LGL_CALL;
typedef void ( *PFNGLGETTEXPARAMETERIIVPROC ) ( GLenum target, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETTEXPARAMETERIUIVPROC ) ( GLenum target, GLenum pname, GLuint* params ) LGL_CALL;
typedef void ( *PFNGLCLEARBUFFERIVPROC ) ( GLenum buffer, GLint drawbuffer, const GLint* value ) LGL_CALL;
typedef void ( *PFNGLCLEARBUFFERUIVPROC ) ( GLenum buffer, GLint drawbuffer, const GLuint* value ) LGL_CALL;
typedef void ( *PFNGLCLEARBUFFERFVPROC ) ( GLenum buffer, GLint drawbuffer, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLCLEARBUFFERFIPROC ) ( GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil ) LGL_CALL;
typedef const GLubyte* ( *PFNGLGETSTRINGIPROC ) ( GLenum name, GLuint index ) LGL_CALL;
typedef void ( *PFNGLTEXBUFFERPROC ) ( GLenum target, GLenum internalformat, GLuint buffer ) LGL_CALL;
typedef void ( *PFNGLPRIMITIVERESTARTINDEXPROC ) ( GLuint index ) LGL_CALL;
typedef void ( *PFNGLGETINTEGER64I_VPROC ) ( GLenum target, GLuint index, GLint64* data ) LGL_CALL;
typedef void ( *PFNGLGETBUFFERPARAMETERI64VPROC ) ( GLenum target, GLenum pname, GLint64* params ) LGL_CALL;
typedef void ( *PFNGLFRAMEBUFFERTEXTUREPROC ) ( GLenum target, GLenum attachment, GLuint texture, GLint level ) LGL_CALL;
typedef void ( *PFNGLVERTEXATTRIBDIVISORPROC ) ( GLuint index, GLuint divisor ) LGL_CALL;
typedef void ( *PFNGLMINSAMPLESHADINGPROC ) ( GLclampf value ) LGL_CALL;
typedef void ( *PFNGLBLENDEQUATIONIPROC ) ( GLuint buf, GLenum mode ) LGL_CALL;
typedef void ( *PFNGLBLENDEQUATIONSEPARATEIPROC ) ( GLuint buf, GLenum modeRGB, GLenum modeAlpha ) LGL_CALL;
typedef void ( *PFNGLBLENDFUNCIPROC ) ( GLuint buf, GLenum src, GLenum dst ) LGL_CALL;
typedef void ( *PFNGLBLENDFUNCSEPARATEIPROC ) ( GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha ) LGL_CALL;
typedef GLboolean ( *PFNGLISRENDERBUFFERPROC ) ( GLuint renderbuffer ) LGL_CALL;
typedef void ( *PFNGLBINDRENDERBUFFERPROC ) ( GLenum target, GLuint renderbuffer ) LGL_CALL;
typedef void ( *PFNGLDELETERENDERBUFFERSPROC ) ( GLsizei n, const GLuint* renderbuffers ) LGL_CALL;
typedef void ( *PFNGLGENRENDERBUFFERSPROC ) ( GLsizei n, GLuint* renderbuffers ) LGL_CALL;
typedef void ( *PFNGLRENDERBUFFERSTORAGEPROC ) ( GLenum target, GLenum internalformat, GLsizei width, GLsizei height ) LGL_CALL;
typedef void ( *PFNGLGETRENDERBUFFERPARAMETERIVPROC ) ( GLenum target, GLenum pname, GLint* params ) LGL_CALL;
typedef GLboolean ( *PFNGLISFRAMEBUFFERPROC ) ( GLuint framebuffer ) LGL_CALL;
typedef void ( *PFNGLBINDFRAMEBUFFERPROC ) ( GLenum target, GLuint framebuffer ) LGL_CALL;
typedef void ( *PFNGLDELETEFRAMEBUFFERSPROC ) ( GLsizei n, const GLuint* framebuffers ) LGL_CALL;
typedef void ( *PFNGLGENFRAMEBUFFERSPROC ) ( GLsizei n, GLuint* framebuffers ) LGL_CALL;
typedef GLenum ( *PFNGLCHECKFRAMEBUFFERSTATUSPROC ) ( GLenum target ) LGL_CALL;
typedef void ( *PFNGLFRAMEBUFFERTEXTURE2DPROC ) ( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level ) LGL_CALL;
typedef void ( *PFNGLFRAMEBUFFERRENDERBUFFERPROC ) ( GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer ) LGL_CALL;
typedef void ( *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC ) ( GLenum target, GLenum attachment, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGENERATEMIPMAPPROC ) ( GLenum target ) LGL_CALL;
typedef void ( *PFNGLBLITFRAMEBUFFERPROC ) ( GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter ) LGL_CALL;
typedef void ( *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC ) ( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height ) LGL_CALL;
typedef void ( *PFNGLFRAMEBUFFERTEXTURELAYERPROC ) ( GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer ) LGL_CALL;
typedef void ( *PFNGLBINDVERTEXARRAYPROC ) ( GLuint array ) LGL_CALL;
typedef void ( *PFNGLDELETEVERTEXARRAYSPROC ) ( GLsizei n, const GLuint* arrays ) LGL_CALL;
typedef void ( *PFNGLGENVERTEXARRAYSPROC ) ( GLsizei n, GLuint* arrays ) LGL_CALL;
typedef GLboolean ( *PFNGLISVERTEXARRAYPROC ) ( GLuint array ) LGL_CALL;
typedef void ( *PFNGLQUERYCOUNTERPROC ) ( GLuint id, GLenum target ) LGL_CALL;
typedef void ( *PFNGLGETQUERYOBJECTI64VPROC ) ( GLuint id, GLenum pname, GLint64* params ) LGL_CALL;
typedef void ( *PFNGLGETQUERYOBJECTUI64VPROC ) ( GLuint id, GLenum pname, GLuint64* params ) LGL_CALL;
typedef void ( *PFNGLGETUNIFORMINDICESPROC ) ( GLuint program, GLsizei uniformCount, const GLchar** uniformNames, GLuint* uniformIndices ) LGL_CALL;
typedef void ( *PFNGLGETACTIVEUNIFORMSIVPROC ) ( GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETACTIVEUNIFORMNAMEPROC ) ( GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName ) LGL_CALL;
typedef void ( *PFNGLPROGRAMPARAMETERIPROC ) ( GLuint program, GLenum pname, GLint value ) LGL_CALL;
typedef void ( *PFNGLVIEWPORTARRAYVPROC ) ( GLuint first, GLsizei count, const GLfloat* v ) LGL_CALL;
typedef void ( *PFNGLVIEWPORTINDEXEDFPROC ) ( GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h ) LGL_CALL;
typedef void ( *PFNGLVIEWPORTINDEXEDFVPROC ) ( GLuint index, const GLfloat* v ) LGL_CALL;
typedef void ( *PFNGLSCISSORARRAYVPROC ) ( GLuint first, GLsizei count, const GLint* v ) LGL_CALL;
typedef void ( *PFNGLSCISSORINDEXEDPROC ) ( GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height ) LGL_CALL;
typedef void ( *PFNGLSCISSORINDEXEDVPROC ) ( GLuint index, const GLint* v ) LGL_CALL;
typedef void ( *PFNGLDEPTHRANGEARRAYVPROC ) ( GLuint first, GLsizei count, const GLclampd* v ) LGL_CALL;
typedef void ( *PFNGLDEPTHRANGEINDEXEDPROC ) ( GLuint index, GLclampd n, GLclampd f ) LGL_CALL;
typedef void ( *PFNGLGETFLOATI_VPROC ) ( GLenum target, GLuint index, GLfloat* data ) LGL_CALL;
typedef void ( *PFNGLGETDOUBLEI_VPROC ) ( GLenum target, GLuint index, GLdouble* data ) LGL_CALL;
typedef void ( *PFNGLPATCHPARAMETERIPROC ) ( GLenum pname, GLint value ) LGL_CALL;
typedef void ( *PFNGLPATCHPARAMETERFVPROC ) ( GLenum pname, const GLfloat* values ) LGL_CALL;
typedef void ( *PFNGLCLIENTATTRIBDEFAULTEXTPROC ) ( GLbitfield mask ) LGL_CALL;
typedef void ( *PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC ) ( GLbitfield mask ) LGL_CALL;
typedef void ( *PFNGLMATRIXLOADFEXTPROC ) ( GLenum mode, const GLfloat* m ) LGL_CALL;
typedef void ( *PFNGLMATRIXLOADDEXTPROC ) ( GLenum mode, const GLdouble* m ) LGL_CALL;
typedef void ( *PFNGLMATRIXMULTFEXTPROC ) ( GLenum mode, const GLfloat* m ) LGL_CALL;
typedef void ( *PFNGLMATRIXMULTDEXTPROC ) ( GLenum mode, const GLdouble* m ) LGL_CALL;
typedef void ( *PFNGLMATRIXLOADIDENTITYEXTPROC ) ( GLenum mode ) LGL_CALL;
typedef void ( *PFNGLMATRIXROTATEFEXTPROC ) ( GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z ) LGL_CALL;
typedef void ( *PFNGLMATRIXROTATEDEXTPROC ) ( GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z ) LGL_CALL;
typedef void ( *PFNGLMATRIXSCALEFEXTPROC ) ( GLenum mode, GLfloat x, GLfloat y, GLfloat z ) LGL_CALL;
typedef void ( *PFNGLMATRIXSCALEDEXTPROC ) ( GLenum mode, GLdouble x, GLdouble y, GLdouble z ) LGL_CALL;
typedef void ( *PFNGLMATRIXTRANSLATEFEXTPROC ) ( GLenum mode, GLfloat x, GLfloat y, GLfloat z ) LGL_CALL;
typedef void ( *PFNGLMATRIXTRANSLATEDEXTPROC ) ( GLenum mode, GLdouble x, GLdouble y, GLdouble z ) LGL_CALL;
typedef void ( *PFNGLMATRIXFRUSTUMEXTPROC ) ( GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar ) LGL_CALL;
typedef void ( *PFNGLMATRIXORTHOEXTPROC ) ( GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar ) LGL_CALL;
typedef void ( *PFNGLMATRIXPOPEXTPROC ) ( GLenum mode ) LGL_CALL;
typedef void ( *PFNGLMATRIXPUSHEXTPROC ) ( GLenum mode ) LGL_CALL;
typedef void ( *PFNGLMATRIXLOADTRANSPOSEFEXTPROC ) ( GLenum mode, const GLfloat* m ) LGL_CALL;
typedef void ( *PFNGLMATRIXLOADTRANSPOSEDEXTPROC ) ( GLenum mode, const GLdouble* m ) LGL_CALL;
typedef void ( *PFNGLMATRIXMULTTRANSPOSEFEXTPROC ) ( GLenum mode, const GLfloat* m ) LGL_CALL;
typedef void ( *PFNGLMATRIXMULTTRANSPOSEDEXTPROC ) ( GLenum mode, const GLdouble* m ) LGL_CALL;
typedef void ( *PFNGLTEXTUREPARAMETERFEXTPROC ) ( GLuint texture, GLenum target, GLenum pname, GLfloat param ) LGL_CALL;
typedef void ( *PFNGLTEXTUREPARAMETERFVEXTPROC ) ( GLuint texture, GLenum target, GLenum pname, const GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLTEXTUREPARAMETERIEXTPROC ) ( GLuint texture, GLenum target, GLenum pname, GLint param ) LGL_CALL;
typedef void ( *PFNGLTEXTUREPARAMETERIVEXTPROC ) ( GLuint texture, GLenum target, GLenum pname, const GLint* params ) LGL_CALL;
typedef void ( *PFNGLTEXTUREIMAGE2DEXTPROC ) ( GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels ) LGL_CALL;
typedef void ( *PFNGLTEXTURESUBIMAGE2DEXTPROC ) ( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels ) LGL_CALL;
typedef void ( *PFNGLCOPYTEXTUREIMAGE2DEXTPROC ) ( GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border ) LGL_CALL;
typedef void ( *PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC ) ( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height ) LGL_CALL;
typedef void ( *PFNGLGETTEXTUREIMAGEEXTPROC ) ( GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels ) LGL_CALL;
typedef void ( *PFNGLGETTEXTUREPARAMETERFVEXTPROC ) ( GLuint texture, GLenum target, GLenum pname, GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLGETTEXTUREPARAMETERIVEXTPROC ) ( GLuint texture, GLenum target, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC ) ( GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC ) ( GLuint texture, GLenum target, GLint level, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLMULTITEXPARAMETERFEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, GLfloat param ) LGL_CALL;
typedef void ( *PFNGLMULTITEXPARAMETERFVEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, const GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLMULTITEXPARAMETERIEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, GLint param ) LGL_CALL;
typedef void ( *PFNGLMULTITEXPARAMETERIVEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, const GLint* params ) LGL_CALL;
typedef void ( *PFNGLMULTITEXIMAGE2DEXTPROC ) ( GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels ) LGL_CALL;
typedef void ( *PFNGLMULTITEXSUBIMAGE2DEXTPROC ) ( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels ) LGL_CALL;
typedef void ( *PFNGLCOPYMULTITEXIMAGE2DEXTPROC ) ( GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border ) LGL_CALL;
typedef void ( *PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC ) ( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width ) LGL_CALL;
typedef void ( *PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC ) ( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height ) LGL_CALL;
typedef void ( *PFNGLGETMULTITEXIMAGEEXTPROC ) ( GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels ) LGL_CALL;
typedef void ( *PFNGLGETMULTITEXPARAMETERFVEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLGETMULTITEXPARAMETERIVEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC ) ( GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC ) ( GLenum texunit, GLenum target, GLint level, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLBINDMULTITEXTUREEXTPROC ) ( GLenum texunit, GLenum target, GLuint texture ) LGL_CALL;
typedef void ( *PFNGLENABLECLIENTSTATEINDEXEDEXTPROC ) ( GLenum array, GLuint index ) LGL_CALL;
typedef void ( *PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC ) ( GLenum array, GLuint index ) LGL_CALL;
typedef void ( *PFNGLMULTITEXCOORDPOINTEREXTPROC ) ( GLenum texunit, GLint size, GLenum type, GLsizei stride, const GLvoid* pointer ) LGL_CALL;
typedef void ( *PFNGLMULTITEXENVFEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, GLfloat param ) LGL_CALL;
typedef void ( *PFNGLMULTITEXENVFVEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, const GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLMULTITEXENVIEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, GLint param ) LGL_CALL;
typedef void ( *PFNGLMULTITEXENVIVEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, const GLint* params ) LGL_CALL;
typedef void ( *PFNGLMULTITEXGENDEXTPROC ) ( GLenum texunit, GLenum coord, GLenum pname, GLdouble param ) LGL_CALL;
typedef void ( *PFNGLMULTITEXGENDVEXTPROC ) ( GLenum texunit, GLenum coord, GLenum pname, const GLdouble* params ) LGL_CALL;
typedef void ( *PFNGLMULTITEXGENFEXTPROC ) ( GLenum texunit, GLenum coord, GLenum pname, GLfloat param ) LGL_CALL;
typedef void ( *PFNGLMULTITEXGENFVEXTPROC ) ( GLenum texunit, GLenum coord, GLenum pname, const GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLMULTITEXGENIEXTPROC ) ( GLenum texunit, GLenum coord, GLenum pname, GLint param ) LGL_CALL;
typedef void ( *PFNGLMULTITEXGENIVEXTPROC ) ( GLenum texunit, GLenum coord, GLenum pname, const GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETMULTITEXENVFVEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLGETMULTITEXENVIVEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETMULTITEXGENDVEXTPROC ) ( GLenum texunit, GLenum coord, GLenum pname, GLdouble* params ) LGL_CALL;
typedef void ( *PFNGLGETMULTITEXGENFVEXTPROC ) ( GLenum texunit, GLenum coord, GLenum pname, GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLGETMULTITEXGENIVEXTPROC ) ( GLenum texunit, GLenum coord, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETFLOATINDEXEDVEXTPROC ) ( GLenum target, GLuint index, GLfloat* data ) LGL_CALL;
typedef void ( *PFNGLGETDOUBLEINDEXEDVEXTPROC ) ( GLenum target, GLuint index, GLdouble* data ) LGL_CALL;
typedef void ( *PFNGLGETPOINTERINDEXEDVEXTPROC ) ( GLenum target, GLuint index, GLvoid** data ) LGL_CALL;
typedef void ( *PFNGLNAMEDPROGRAMSTRINGEXTPROC ) ( GLuint program, GLenum target, GLenum format, GLsizei len, const GLvoid* string ) LGL_CALL;
typedef void ( *PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC ) ( GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w ) LGL_CALL;
typedef void ( *PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC ) ( GLuint program, GLenum target, GLuint index, const GLdouble* params ) LGL_CALL;
typedef void ( *PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC ) ( GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w ) LGL_CALL;
typedef void ( *PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC ) ( GLuint program, GLenum target, GLuint index, const GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC ) ( GLuint program, GLenum target, GLuint index, GLdouble* params ) LGL_CALL;
typedef void ( *PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC ) ( GLuint program, GLenum target, GLuint index, GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLGETNAMEDPROGRAMIVEXTPROC ) ( GLuint program, GLenum target, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETNAMEDPROGRAMSTRINGEXTPROC ) ( GLuint program, GLenum target, GLenum pname, GLvoid* string ) LGL_CALL;
typedef void ( *PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC ) ( GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat* params ) LGL_CALL;
typedef void ( *PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC ) ( GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w ) LGL_CALL;
typedef void ( *PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC ) ( GLuint program, GLenum target, GLuint index, const GLint* params ) LGL_CALL;
typedef void ( *PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC ) ( GLuint program, GLenum target, GLuint index, GLsizei count, const GLint* params ) LGL_CALL;
typedef void ( *PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC ) ( GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w ) LGL_CALL;
typedef void ( *PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC ) ( GLuint program, GLenum target, GLuint index, const GLuint* params ) LGL_CALL;
typedef void ( *PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC ) ( GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint* params ) LGL_CALL;
typedef void ( *PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC ) ( GLuint program, GLenum target, GLuint index, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC ) ( GLuint program, GLenum target, GLuint index, GLuint* params ) LGL_CALL;
typedef void ( *PFNGLTEXTUREPARAMETERIIVEXTPROC ) ( GLuint texture, GLenum target, GLenum pname, const GLint* params ) LGL_CALL;
typedef void ( *PFNGLTEXTUREPARAMETERIUIVEXTPROC ) ( GLuint texture, GLenum target, GLenum pname, const GLuint* params ) LGL_CALL;
typedef void ( *PFNGLGETTEXTUREPARAMETERIIVEXTPROC ) ( GLuint texture, GLenum target, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETTEXTUREPARAMETERIUIVEXTPROC ) ( GLuint texture, GLenum target, GLenum pname, GLuint* params ) LGL_CALL;
typedef void ( *PFNGLMULTITEXPARAMETERIIVEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, const GLint* params ) LGL_CALL;
typedef void ( *PFNGLMULTITEXPARAMETERIUIVEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, const GLuint* params ) LGL_CALL;
typedef void ( *PFNGLGETMULTITEXPARAMETERIIVEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETMULTITEXPARAMETERIUIVEXTPROC ) ( GLenum texunit, GLenum target, GLenum pname, GLuint* params ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM1FEXTPROC ) ( GLuint program, GLint location, GLfloat v0 ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM2FEXTPROC ) ( GLuint program, GLint location, GLfloat v0, GLfloat v1 ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM3FEXTPROC ) ( GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2 ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM4FEXTPROC ) ( GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3 ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM1IEXTPROC ) ( GLuint program, GLint location, GLint v0 ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM2IEXTPROC ) ( GLuint program, GLint location, GLint v0, GLint v1 ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM3IEXTPROC ) ( GLuint program, GLint location, GLint v0, GLint v1, GLint v2 ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM4IEXTPROC ) ( GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3 ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM1FVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM2FVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM3FVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM4FVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM1IVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLint* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM2IVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLint* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM3IVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLint* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM4IVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLint* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM1UIEXTPROC ) ( GLuint program, GLint location, GLuint v0 ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM2UIEXTPROC ) ( GLuint program, GLint location, GLuint v0, GLuint v1 ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM3UIEXTPROC ) ( GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2 ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM4UIEXTPROC ) ( GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3 ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM1UIVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLuint* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM2UIVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLuint* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM3UIVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLuint* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM4UIVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLuint* value ) LGL_CALL;
typedef void ( *PFNGLNAMEDBUFFERDATAEXTPROC ) ( GLuint buffer, GLsizeiptr size, const GLvoid* data, GLenum usage ) LGL_CALL;
typedef void ( *PFNGLNAMEDBUFFERSUBDATAEXTPROC ) ( GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid* data ) LGL_CALL;
typedef GLvoid* ( *PFNGLMAPNAMEDBUFFEREXTPROC ) ( GLuint buffer, GLenum access ) LGL_CALL;
typedef GLboolean ( *PFNGLUNMAPNAMEDBUFFEREXTPROC ) ( GLuint buffer ) LGL_CALL;
typedef GLvoid* ( *PFNGLMAPNAMEDBUFFERRANGEEXTPROC ) ( GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access ) LGL_CALL;
typedef void ( *PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC ) ( GLuint buffer, GLintptr offset, GLsizeiptr length ) LGL_CALL;
typedef void ( *PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC ) ( GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size ) LGL_CALL;
typedef void ( *PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC ) ( GLuint buffer, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGETNAMEDBUFFERPOINTERVEXTPROC ) ( GLuint buffer, GLenum pname, GLvoid** params ) LGL_CALL;
typedef void ( *PFNGLGETNAMEDBUFFERSUBDATAEXTPROC ) ( GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid* data ) LGL_CALL;
typedef void ( *PFNGLTEXTUREBUFFEREXTPROC ) ( GLuint texture, GLenum target, GLenum internalformat, GLuint buffer ) LGL_CALL;
typedef void ( *PFNGLMULTITEXBUFFEREXTPROC ) ( GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer ) LGL_CALL;
typedef void ( *PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC ) ( GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height ) LGL_CALL;
typedef void ( *PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC ) ( GLuint renderbuffer, GLenum pname, GLint* params ) LGL_CALL;
typedef GLenum ( *PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC ) ( GLuint framebuffer, GLenum target ) LGL_CALL;
typedef void ( *PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC ) ( GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level ) LGL_CALL;
typedef void ( *PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC ) ( GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer ) LGL_CALL;
typedef void ( *PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC ) ( GLuint framebuffer, GLenum attachment, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLGENERATETEXTUREMIPMAPEXTPROC ) ( GLuint texture, GLenum target ) LGL_CALL;
typedef void ( *PFNGLGENERATEMULTITEXMIPMAPEXTPROC ) ( GLenum texunit, GLenum target ) LGL_CALL;
typedef void ( *PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC ) ( GLuint framebuffer, GLenum mode ) LGL_CALL;
typedef void ( *PFNGLFRAMEBUFFERREADBUFFEREXTPROC ) ( GLuint framebuffer, GLenum mode ) LGL_CALL;
typedef void ( *PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC ) ( GLuint framebuffer, GLenum pname, GLint* params ) LGL_CALL;
typedef void ( *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC ) ( GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height ) LGL_CALL;
typedef void ( *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC ) ( GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height ) LGL_CALL;
typedef void ( *PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC ) ( GLuint framebuffer, GLenum attachment, GLuint texture, GLint level ) LGL_CALL;
typedef void ( *PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC ) ( GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer ) LGL_CALL;
typedef void ( *PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC ) ( GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face ) LGL_CALL;
typedef void ( *PFNGLTEXTURERENDERBUFFEREXTPROC ) ( GLuint texture, GLenum target, GLuint renderbuffer ) LGL_CALL;
typedef void ( *PFNGLMULTITEXRENDERBUFFEREXTPROC ) ( GLenum texunit, GLenum target, GLuint renderbuffer ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM1DEXTPROC ) ( GLuint program, GLint location, GLdouble x ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM2DEXTPROC ) ( GLuint program, GLint location, GLdouble x, GLdouble y ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM3DEXTPROC ) ( GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM4DEXTPROC ) ( GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM1DVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLdouble* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM2DVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLdouble* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM3DVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLdouble* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORM4DVEXTPROC ) ( GLuint program, GLint location, GLsizei count, const GLdouble* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value ) LGL_CALL;
typedef void ( *PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC ) ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value ) LGL_CALL;
#endif // OS_ANDROID

struct sLGLAPI
{
	sLGLAPI() { memset( this, 0, sizeof( *this ) ); };
	//
#if defined( _WIN32 )
	PFNwglGetProcAddress    lglGetProcAddress;
	PFNwglCreateContext     lglCreateContext;
	PFNwglMakeCurrent       lglMakeCurrent;
	PFNwglDeleteContext     lglDeleteContext;
	PFNwglGetCurrentContext lglGetCurrentContext;
#endif
	//
	PFNGLACTIVETEXTUREPROC                  glActiveTexture;
	PFNGLATTACHSHADERPROC                   glAttachShader;
	PFNGLBINDATTRIBLOCATIONPROC             glBindAttribLocation;
	PFNGLBINDBUFFERPROC                     glBindBuffer;
	PFNGLBINDFRAGDATALOCATIONPROC           glBindFragDataLocation;
	PFNGLBINDFRAMEBUFFERPROC                glBindFramebuffer;
	PFNGLBINDTEXTUREPROC                    glBindTexture;
	PFNGLBINDVERTEXARRAYPROC                glBindVertexArray;
	PFNGLBLENDFUNCPROC                      glBlendFunc;
	PFNGLBUFFERDATAPROC                     glBufferData;
	PFNGLBUFFERSUBDATAPROC                  glBufferSubData;
	PFNGLCHECKFRAMEBUFFERSTATUSPROC         glCheckFramebufferStatus;
	PFNGLCLEARPROC                          glClear;
	PFNGLCLEARCOLORPROC                     glClearColor;
	PFNGLCLEARDEPTHPROC                     glClearDepth;
	PFNGLCLEARSTENCILPROC                   glClearStencil;
	PFNGLCOLORMASKPROC                      glColorMask;
	PFNGLCOMPILESHADERPROC                  glCompileShader;
	PFNGLCREATEPROGRAMPROC                  glCreateProgram;
	PFNGLCREATESHADERPROC                   glCreateShader;
	PFNGLCULLFACEPROC                       glCullFace;
	PFNGLDELETEBUFFERSPROC                  glDeleteBuffers;
	PFNGLDELETEFRAMEBUFFERSPROC             glDeleteFramebuffers;
	PFNGLDELETEPROGRAMPROC                  glDeleteProgram;
	PFNGLDELETEQUERIESPROC                  glDeleteQueries;
	PFNGLDELETESHADERPROC                   glDeleteShader;
	PFNGLDELETETEXTURESPROC                 glDeleteTextures;
	PFNGLDELETEVERTEXARRAYSPROC             glDeleteVertexArrays;
	PFNGLDEPTHMASKPROC                      glDepthMask;
	PFNGLDISABLEPROC                        glDisable;
	PFNGLDISABLEIPROC                       glDisablei;
	PFNGLDISABLEVERTEXATTRIBARRAYPROC       glDisableVertexAttribArray;
	PFNGLDRAWARRAYSPROC                     glDrawArrays;
	PFNGLDRAWELEMENTSPROC                   glDrawElements;
	PFNGLENABLEPROC                         glEnable;
	PFNGLENABLEIPROC                        glEnablei;
	PFNGLENABLEVERTEXATTRIBARRAYPROC        glEnableVertexAttribArray;
	PFNGLFINISHPROC                         glFinish;
	PFNGLFLUSHPROC                          glFlush;
	PFNGLFRAMEBUFFERTEXTURE2DPROC           glFramebufferTexture2D;
	PFNGLGENBUFFERSPROC                     glGenBuffers;
	PFNGLGENERATEMIPMAPPROC                 glGenerateMipmap;
	PFNGLGENFRAMEBUFFERSPROC                glGenFramebuffers;
	PFNGLGENQUERIESPROC                     glGenQueries;
	PFNGLGENTEXTURESPROC                    glGenTextures;
	PFNGLGENVERTEXARRAYSPROC                glGenVertexArrays;
	PFNGLGETACTIVEATTRIBPROC                glGetActiveAttrib;
	PFNGLGETACTIVEUNIFORMPROC               glGetActiveUniform;
	PFNGLGETATTRIBLOCATIONPROC              glGetAttribLocation;
	PFNGLGETERRORPROC                       glGetError;
	PFNGLGETINTEGERVPROC                    glGetIntegerv;
	PFNGLGETPROGRAMINFOLOGPROC              glGetProgramInfoLog;
	PFNGLGETPROGRAMIVPROC                   glGetProgramiv;
	PFNGLGETSHADERINFOLOGPROC               glGetShaderInfoLog;
	PFNGLGETSHADERIVPROC                    glGetShaderiv;
	PFNGLGETSTRINGPROC                      glGetString;
	PFNGLGETSTRINGIPROC                     glGetStringi;
	PFNGLGETTEXIMAGEPROC                    glGetTexImage;
	PFNGLGETTEXLEVELPARAMETERIVPROC         glGetTexLevelParameteriv;
	PFNGLGETUNIFORMLOCATIONPROC             glGetUniformLocation;
	PFNGLISPROGRAMPROC                      glIsProgram;
	PFNGLISSHADERPROC                       glIsShader;
	PFNGLLINKPROGRAMPROC                    glLinkProgram;
	PFNGLPATCHPARAMETERIPROC                glPatchParameteri;
	PFNGLPIXELSTOREIPROC                    glPixelStorei;
	PFNGLPOLYGONMODEPROC                    glPolygonMode;
	PFNGLSCISSORPROC                        glScissor;
	PFNGLPROGRAMPARAMETERIPROC              glProgramParameteri;
	PFNGLREADPIXELSPROC                     glReadPixels;
	PFNGLSHADERSOURCEPROC                   glShaderSource;
	PFNGLTEXSUBIMAGE2DPROC                  glTexSubImage2D;
	PFNGLTEXIMAGE2DPROC                     glTexImage2D;
	PFNGLTEXPARAMETERFPROC                  glTexParameterf;
	PFNGLTEXPARAMETERIPROC                  glTexParameteri;
	PFNGLUNIFORM1FPROC                      glUniform1f;
	PFNGLUNIFORM1FVPROC                     glUniform1fv;
	PFNGLUNIFORM1IPROC                      glUniform1i;
	PFNGLUNIFORM1IVPROC                     glUniform1iv;
	PFNGLUNIFORM3FVPROC                     glUniform3fv;
	PFNGLUNIFORM4FVPROC                     glUniform4fv;
	PFNGLUNIFORMMATRIX3FVPROC               glUniformMatrix3fv;
	PFNGLUNIFORMMATRIX4FVPROC               glUniformMatrix4fv;
	PFNGLUSEPROGRAMPROC                     glUseProgram;
	PFNGLVALIDATEPROGRAMPROC                glValidateProgram;
	PFNGLVERTEXATTRIBPOINTERPROC            glVertexAttribPointer;
	PFNGLVIEWPORTPROC                       glViewport;
#if defined( _WIN32 )
	PFNWGLCHOOSEPIXELFORMATARBPROC          wglChoosePixelFormatARB;
	PFNWGLCREATECONTEXTATTRIBSARBPROC       wglCreateContextAttribsARB;
	PFNWGLGETEXTENSIONSSTRINGARBPROC        wglGetExtensionsStringARB;
	PFNWGLSWAPINTERVALEXTPROC               wglSwapIntervalEXT;
#endif
};

#endif // _LGL_API_
